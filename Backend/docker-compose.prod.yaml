version: "3.8"
services:
  api:
    build: .
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1s; done; uvicorn app.main:app --host 0.0.0.0 --port 80'
    volumes:
      - .:/backend
    expose:
      - 80
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
    networks:
      - entrees-internal

  db:
    image: postgis/postgis:14-master
    volumes:
      - pg-data-entrees:/var/lib/postgresql/data/
    expose:
      - "5432"
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 1s
      retries: 10
    networks:
      - entrees-internal

  traefik:
    image: traefik:2.7
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./services/traefik.prod.toml:/etc/traefik/traefik.toml"
      - ./certificates:/etc/certs:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule.Host=(`dashboard.localhost`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@docker"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=testuser:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1"
    depends_on:
      - api
    networks:
      - entrees-external
      - entrees-internal

volumes:
  pg-data-entrees:
networks:
  entrees-external:
    external: true
  entrees-internal:
